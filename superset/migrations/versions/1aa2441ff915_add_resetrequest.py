# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""add ResetRequest

Revision ID: 1aa2441ff915
Revises: def97f26fdfb
Create Date: 2019-08-27 09:48:30.159942

"""

# revision identifiers, used by Alembic.
revision = '1aa2441ff915'
down_revision = 'def97f26fdfb'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reset_request',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('reset_date', sa.DateTime(), nullable=True),
    sa.Column('reset_hash', sa.String(length=256), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_table('tag',
    # sa.Column('created_on', sa.DateTime(), nullable=True),
    # sa.Column('changed_on', sa.DateTime(), nullable=True),
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=250), nullable=True),
    # sa.Column('type', sa.Enum('custom', 'type', 'owner', 'favorited_by', name='tagtypes'), nullable=True),
    # sa.Column('created_by_fk', sa.Integer(), nullable=True),
    # sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    # sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    # sa.PrimaryKeyConstraint('id'),
    # sa.UniqueConstraint('name')
    # )
    # op.create_table('tagged_object',
    # sa.Column('created_on', sa.DateTime(), nullable=True),
    # sa.Column('changed_on', sa.DateTime(), nullable=True),
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('tag_id', sa.Integer(), nullable=True),
    # sa.Column('object_id', sa.Integer(), nullable=True),
    # sa.Column('object_type', sa.Enum('query', 'chart', 'dashboard', name='objecttypes'), nullable=True),
    # sa.Column('created_by_fk', sa.Integer(), nullable=True),
    # sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    # sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    # sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.drop_table('bart_lines')
    # op.drop_table('unicode_test')
    # op.drop_table('paris_iris_mapping')
    # op.drop_table('wb_health_population')
    # op.drop_table('random_time_series')
    # op.drop_table('birth_france_by_region')
    # op.drop_table('long_lat')
    # op.drop_table('multiformat_time_series')
    # op.drop_table('flights')
    # op.drop_table('sf_population_polygons')
    # op.drop_table('birth_names')
    # op.drop_table('energy_usage')
    # op.alter_column('annotation', 'layer_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=False)
    # op.add_column('clusters', sa.Column('broker_pass', sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(), nullable=True))
    # op.add_column('clusters', sa.Column('broker_user', sa.String(length=255), nullable=True))
    # op.alter_column('clusters', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('clusters', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.create_unique_constraint(None, 'clusters', ['verbose_name'])
    # op.alter_column('columns', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('columns', 'column_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=False)
    # op.alter_column('columns', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('css_templates', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('css_templates', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.create_unique_constraint(None, 'dashboard_slices', ['dashboard_id', 'slice_id'])
    # op.add_column('dashboards', sa.Column('published', sa.Boolean(), nullable=True))
    # op.alter_column('dashboards', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('dashboards', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.create_unique_constraint(None, 'dashboards', ['slug'])
    # op.alter_column('datasources', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('datasources', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('datasources', 'datasource_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=False)
    # op.create_foreign_key(None, 'datasources', 'ab_user', ['created_by_fk'], ['id'])
    # op.alter_column('dbs', 'allow_csv_upload',
    #            existing_type=sa.BOOLEAN(),
    #            nullable=True,
    #            existing_server_default=sa.text('1'))
    # op.alter_column('dbs', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('dbs', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.create_unique_constraint(None, 'dbs', ['verbose_name'])
    # op.alter_column('metrics', 'json',
    #            existing_type=sa.TEXT(),
    #            nullable=False)
    # op.alter_column('metrics', 'metric_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=False)
    # op.create_foreign_key(None, 'metrics', 'ab_user', ['created_by_fk'], ['id'])
    # op.create_foreign_key(None, 'metrics', 'ab_user', ['changed_by_fk'], ['id'])
    # op.drop_column('query', 'limit_used')
    # op.alter_column('slices', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('slices', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('sql_metrics', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('sql_metrics', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('sql_metrics', 'expression',
    #            existing_type=sa.TEXT(),
    #            nullable=False)
    # op.alter_column('sql_metrics', 'metric_name',
    #            existing_type=sa.VARCHAR(length=512),
    #            nullable=False)
    # op.create_unique_constraint(None, 'sql_metrics', ['table_id', 'metric_name'])
    # op.alter_column('table_columns', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('table_columns', 'column_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=False)
    # op.alter_column('table_columns', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.create_unique_constraint(None, 'table_columns', ['table_id', 'column_name'])
    # op.drop_column('table_columns', 'database_expression')
    # op.alter_column('tables', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('tables', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.drop_constraint('uq_table_in_db_schema', 'tables', type_='unique')
    # op.create_unique_constraint(None, 'tables', ['database_id', 'table_name'])
    # op.alter_column('url', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # op.alter_column('url', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('url', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('url', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.drop_constraint(None, 'tables', type_='unique')
    # op.create_unique_constraint('uq_table_in_db_schema', 'tables', ['database_id', 'schema', 'table_name'])
    # op.alter_column('tables', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('tables', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.add_column('table_columns', sa.Column('database_expression', sa.VARCHAR(length=255), nullable=True))
    # op.drop_constraint(None, 'table_columns', type_='unique')
    # op.alter_column('table_columns', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('table_columns', 'column_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=True)
    # op.alter_column('table_columns', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.drop_constraint(None, 'sql_metrics', type_='unique')
    # op.alter_column('sql_metrics', 'metric_name',
    #            existing_type=sa.VARCHAR(length=512),
    #            nullable=True)
    # op.alter_column('sql_metrics', 'expression',
    #            existing_type=sa.TEXT(),
    #            nullable=True)
    # op.alter_column('sql_metrics', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('sql_metrics', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('slices', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('slices', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.add_column('query', sa.Column('limit_used', sa.BOOLEAN(), nullable=True))
    # op.drop_constraint(None, 'metrics', type_='foreignkey')
    # op.drop_constraint(None, 'metrics', type_='foreignkey')
    # op.alter_column('metrics', 'metric_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=True)
    # op.alter_column('metrics', 'json',
    #            existing_type=sa.TEXT(),
    #            nullable=True)
    # op.drop_constraint(None, 'dbs', type_='unique')
    # op.alter_column('dbs', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('dbs', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('dbs', 'allow_csv_upload',
    #            existing_type=sa.BOOLEAN(),
    #            nullable=False,
    #            existing_server_default=sa.text('1'))
    # op.drop_constraint(None, 'datasources', type_='foreignkey')
    # op.alter_column('datasources', 'datasource_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=True)
    # op.alter_column('datasources', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('datasources', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.drop_constraint(None, 'dashboards', type_='unique')
    # op.alter_column('dashboards', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('dashboards', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.drop_column('dashboards', 'published')
    # op.drop_constraint(None, 'dashboard_slices', type_='unique')
    # op.alter_column('css_templates', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('css_templates', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('columns', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('columns', 'column_name',
    #            existing_type=sa.VARCHAR(length=255),
    #            nullable=True)
    # op.alter_column('columns', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.drop_constraint(None, 'clusters', type_='unique')
    # op.alter_column('clusters', 'created_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.alter_column('clusters', 'changed_on',
    #            existing_type=sa.DATETIME(),
    #            nullable=False)
    # op.drop_column('clusters', 'broker_user')
    # op.drop_column('clusters', 'broker_pass')
    # op.alter_column('annotation', 'layer_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # op.create_table('energy_usage',
    # sa.Column('source', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('target', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('value', sa.FLOAT(), nullable=True)
    # )
    # op.create_table('birth_names',
    # sa.Column('ds', sa.DATETIME(), nullable=True),
    # sa.Column('gender', sa.VARCHAR(length=16), nullable=True),
    # sa.Column('name', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('num', sa.BIGINT(), nullable=True),
    # sa.Column('state', sa.VARCHAR(length=10), nullable=True),
    # sa.Column('sum_boys', sa.BIGINT(), nullable=True),
    # sa.Column('sum_girls', sa.BIGINT(), nullable=True)
    # )
    # op.create_table('sf_population_polygons',
    # sa.Column('area', sa.BIGINT(), nullable=True),
    # sa.Column('contour', sa.TEXT(), nullable=True),
    # sa.Column('population', sa.BIGINT(), nullable=True),
    # sa.Column('zipcode', sa.BIGINT(), nullable=True)
    # )
    # op.create_table('flights',
    # sa.Column('DAY_OF_WEEK', sa.BIGINT(), nullable=True),
    # sa.Column('AIRLINE', sa.TEXT(), nullable=True),
    # sa.Column('FLIGHT_NUMBER', sa.BIGINT(), nullable=True),
    # sa.Column('TAIL_NUMBER', sa.TEXT(), nullable=True),
    # sa.Column('ORIGIN_AIRPORT', sa.TEXT(), nullable=True),
    # sa.Column('DESTINATION_AIRPORT', sa.TEXT(), nullable=True),
    # sa.Column('SCHEDULED_DEPARTURE', sa.BIGINT(), nullable=True),
    # sa.Column('DEPARTURE_TIME', sa.FLOAT(), nullable=True),
    # sa.Column('DEPARTURE_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('TAXI_OUT', sa.FLOAT(), nullable=True),
    # sa.Column('WHEELS_OFF', sa.FLOAT(), nullable=True),
    # sa.Column('SCHEDULED_TIME', sa.BIGINT(), nullable=True),
    # sa.Column('ELAPSED_TIME', sa.FLOAT(), nullable=True),
    # sa.Column('AIR_TIME', sa.FLOAT(), nullable=True),
    # sa.Column('DISTANCE', sa.BIGINT(), nullable=True),
    # sa.Column('WHEELS_ON', sa.FLOAT(), nullable=True),
    # sa.Column('TAXI_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SCHEDULED_ARRIVAL', sa.BIGINT(), nullable=True),
    # sa.Column('ARRIVAL_TIME', sa.FLOAT(), nullable=True),
    # sa.Column('ARRIVAL_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('DIVERTED', sa.BIGINT(), nullable=True),
    # sa.Column('CANCELLED', sa.BIGINT(), nullable=True),
    # sa.Column('CANCELLATION_REASON', sa.TEXT(), nullable=True),
    # sa.Column('AIR_SYSTEM_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('SECURITY_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('AIRLINE_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('LATE_AIRCRAFT_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('WEATHER_DELAY', sa.FLOAT(), nullable=True),
    # sa.Column('ds', sa.DATETIME(), nullable=True),
    # sa.Column('AIRPORT', sa.TEXT(), nullable=True),
    # sa.Column('CITY', sa.TEXT(), nullable=True),
    # sa.Column('STATE', sa.TEXT(), nullable=True),
    # sa.Column('COUNTRY', sa.TEXT(), nullable=True),
    # sa.Column('LATITUDE', sa.FLOAT(), nullable=True),
    # sa.Column('LONGITUDE', sa.FLOAT(), nullable=True),
    # sa.Column('AIRPORT_DEST', sa.TEXT(), nullable=True),
    # sa.Column('CITY_DEST', sa.TEXT(), nullable=True),
    # sa.Column('STATE_DEST', sa.TEXT(), nullable=True),
    # sa.Column('COUNTRY_DEST', sa.TEXT(), nullable=True),
    # sa.Column('LATITUDE_DEST', sa.FLOAT(), nullable=True),
    # sa.Column('LONGITUDE_DEST', sa.FLOAT(), nullable=True)
    # )
    # op.create_table('multiformat_time_series',
    # sa.Column('ds', sa.DATE(), nullable=True),
    # sa.Column('ds2', sa.DATETIME(), nullable=True),
    # sa.Column('epoch_ms', sa.BIGINT(), nullable=True),
    # sa.Column('epoch_s', sa.BIGINT(), nullable=True),
    # sa.Column('string0', sa.VARCHAR(length=100), nullable=True),
    # sa.Column('string1', sa.VARCHAR(length=100), nullable=True),
    # sa.Column('string2', sa.VARCHAR(length=100), nullable=True),
    # sa.Column('string3', sa.VARCHAR(length=100), nullable=True)
    # )
    # op.create_table('long_lat',
    # sa.Column('LON', sa.FLOAT(), nullable=True),
    # sa.Column('LAT', sa.FLOAT(), nullable=True),
    # sa.Column('NUMBER', sa.TEXT(), nullable=True),
    # sa.Column('STREET', sa.TEXT(), nullable=True),
    # sa.Column('UNIT', sa.TEXT(), nullable=True),
    # sa.Column('CITY', sa.FLOAT(), nullable=True),
    # sa.Column('DISTRICT', sa.FLOAT(), nullable=True),
    # sa.Column('REGION', sa.FLOAT(), nullable=True),
    # sa.Column('POSTCODE', sa.BIGINT(), nullable=True),
    # sa.Column('ID', sa.FLOAT(), nullable=True),
    # sa.Column('datetime', sa.DATETIME(), nullable=True),
    # sa.Column('occupancy', sa.FLOAT(), nullable=True),
    # sa.Column('radius_miles', sa.FLOAT(), nullable=True),
    # sa.Column('geohash', sa.VARCHAR(length=12), nullable=True),
    # sa.Column('delimited', sa.VARCHAR(length=60), nullable=True)
    # )
    # op.create_table('birth_france_by_region',
    # sa.Column('DEPT_ID', sa.VARCHAR(length=10), nullable=True),
    # sa.Column('2003', sa.BIGINT(), nullable=True),
    # sa.Column('2004', sa.BIGINT(), nullable=True),
    # sa.Column('2005', sa.BIGINT(), nullable=True),
    # sa.Column('2006', sa.BIGINT(), nullable=True),
    # sa.Column('2007', sa.BIGINT(), nullable=True),
    # sa.Column('2008', sa.BIGINT(), nullable=True),
    # sa.Column('2009', sa.BIGINT(), nullable=True),
    # sa.Column('2010', sa.BIGINT(), nullable=True),
    # sa.Column('2011', sa.BIGINT(), nullable=True),
    # sa.Column('2012', sa.BIGINT(), nullable=True),
    # sa.Column('2013', sa.BIGINT(), nullable=True),
    # sa.Column('2014', sa.BIGINT(), nullable=True),
    # sa.Column('dttm', sa.DATE(), nullable=True)
    # )
    # op.create_table('random_time_series',
    # sa.Column('ds', sa.DATETIME(), nullable=True)
    # )
    # op.create_table('wb_health_population',
    # *[sa.Column('NY_GNP_PCAP_CD', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ADT_1524_LT_FM_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ADT_1524_LT_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ADT_1524_LT_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ADT_LITR_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ADT_LITR_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ADT_LITR_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_ENR_ORPH', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_CMPT_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_CMPT_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_CMPT_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_ENRR', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_ENRR_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_ENRR_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_NENR', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_NENR_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SE_PRM_NENR_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SE_SEC_ENRR', sa.FLOAT(), nullable=True),
    # sa.Column('SE_SEC_ENRR_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SE_SEC_ENRR_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SE_SEC_NENR', sa.FLOAT(), nullable=True),
    # sa.Column('SE_SEC_NENR_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SE_SEC_NENR_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SE_TER_ENRR', sa.FLOAT(), nullable=True),
    # sa.Column('SE_TER_ENRR_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SE_XPD_TOTL_GD_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_ANM_CHLD_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_ANM_NPRG_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_CON_1524_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_CON_1524_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_CON_AIDS_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_CON_AIDS_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DTH_COMM_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DTH_IMRT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DTH_INJR_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DTH_MORT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DTH_NCOM_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DTH_NMRT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_AIDS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_AIDS_DH', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_AIDS_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_AIDS_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_MORT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_MORT_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_MORT_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SH_DYN_NMRT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_FPL_SATI_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_H2O_SAFE_RU_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_H2O_SAFE_UR_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_H2O_SAFE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_0014', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_1524_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_1524_KW_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_1524_KW_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_1524_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_ARTC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_KNOW_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_KNOW_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_ORPH', sa.FLOAT(), nullable=True),
    # sa.Column('SH_HIV_TOTL', sa.FLOAT(), nullable=True),
    # sa.Column('SH_IMM_HEPB', sa.FLOAT(), nullable=True),
    # sa.Column('SH_IMM_HIB3', sa.FLOAT(), nullable=True),
    # sa.Column('SH_IMM_IBCG', sa.FLOAT(), nullable=True),
    # sa.Column('SH_IMM_IDPT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_IMM_MEAS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_IMM_POL3', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MED_BEDS_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MED_CMHW_P3', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MED_NUMW_P3', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MED_PHYS_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MLR_NETS_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MLR_PREG_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MLR_SPF2_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MLR_TRET_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MMR_DTHS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MMR_LEVE', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MMR_RISK', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MMR_RISK_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_MMR_WAGE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_PRG_ANEM', sa.FLOAT(), nullable=True),
    # sa.Column('SH_PRG_ARTC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_PRG_SYPH_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_PRV_SMOK_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SH_PRV_SMOK_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ACSN', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ACSN_RU', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ACSN_UR', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ANV4_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ANVC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ARIC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_BFED_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_BRTC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_BRTW_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_DIAB_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_IYCF_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_MALN_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_MALN_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_MALN_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_MALR', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_MMRT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_MMRT_NE', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ORCF_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_ORTH', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_OW15_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_OW15_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_OW15_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_OWGH_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_OWGH_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_OWGH_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_PNVC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_STNT_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_STNT_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_STNT_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_WAST_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_WAST_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_STA_WAST_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_SVR_WAST_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_SVR_WAST_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_SVR_WAST_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_TBS_CURE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_TBS_DTEC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_TBS_INCD', sa.FLOAT(), nullable=True),
    # sa.Column('SH_TBS_MORT', sa.FLOAT(), nullable=True),
    # sa.Column('SH_TBS_PREV', sa.FLOAT(), nullable=True),
    # sa.Column('SH_VAC_TTNS_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_EXTR_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_OOPC_TO_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_OOPC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PCAP', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PCAP_PP_KD', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PRIV', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PRIV_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PUBL', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PUBL_GX_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_PUBL_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_TOTL_CD', sa.FLOAT(), nullable=True),
    # sa.Column('SH_XPD_TOTL_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SI_POV_NAHC', sa.FLOAT(), nullable=True),
    # sa.Column('SI_POV_RUHC', sa.FLOAT(), nullable=True),
    # sa.Column('SI_POV_URHC', sa.FLOAT(), nullable=True),
    # sa.Column('SL_EMP_INSV_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SL_TLF_TOTL_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SL_TLF_TOTL_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SL_UEM_TOTL_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SL_UEM_TOTL_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SL_UEM_TOTL_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SM_POP_NETM', sa.FLOAT(), nullable=True),
    # sa.Column('SN_ITK_DEFC', sa.FLOAT(), nullable=True),
    # sa.Column('SN_ITK_DEFC_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SN_ITK_SALT_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SN_ITK_VITA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_ADO_TFRT', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_AMRT_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_AMRT_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_CBRT_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_CDRT_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_CONU_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_IMRT_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_IMRT_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_IMRT_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_LE00_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_LE00_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_LE00_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_SMAM_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_SMAM_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_TFRT_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_TO65_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_TO65_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_DYN_WFRT', sa.FLOAT(), nullable=True),
    # sa.Column('SP_HOU_FEMA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_MTR_1519_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0004_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0004_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0004_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0004_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0014_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0014_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0014_TO', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0014_TO_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0509_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0509_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0509_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_0509_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1014_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1014_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1014_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1014_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1519_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1519_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1519_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1519_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1564_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1564_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1564_TO', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_1564_TO_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2024_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2024_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2024_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2024_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2529_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2529_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2529_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_2529_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3034_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3034_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3034_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3034_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3539_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3539_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3539_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_3539_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4044_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4044_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4044_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4044_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4549_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4549_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4549_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_4549_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5054_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5054_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5054_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5054_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5559_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5559_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5559_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_5559_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6064_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6064_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6064_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6064_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6569_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6569_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6569_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_6569_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_65UP_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_65UP_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_65UP_TO', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_65UP_TO_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7074_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7074_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7074_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7074_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7579_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7579_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7579_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_7579_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_80UP_FE', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_80UP_FE_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_80UP_MA', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_80UP_MA_5Y', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG00_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG00_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG01_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG01_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG02_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG02_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG03_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG03_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG04_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG04_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG05_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG05_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG06_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG06_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG07_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG07_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG08_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG08_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG09_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG09_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG10_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG10_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG11_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG11_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG12_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG12_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG13_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG13_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG14_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG14_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG15_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG15_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG16_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG16_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG17_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG17_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG18_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG18_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG19_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG19_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG20_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG20_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG21_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG21_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG22_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG22_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG23_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG23_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG24_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG24_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG25_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_AG25_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_BRTH_MF', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_DPND', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_DPND_OL', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_DPND_YG', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_GROW', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_TOTL', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_TOTL_FE_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_TOTL_FE_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_TOTL_MA_IN', sa.FLOAT(), nullable=True),
    # sa.Column('SP_POP_TOTL_MA_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_REG_BRTH_RU_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_REG_BRTH_UR_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_REG_BRTH_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_REG_DTHS_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_RUR_TOTL', sa.FLOAT(), nullable=True),
    # sa.Column('SP_RUR_TOTL_ZG', sa.FLOAT(), nullable=True),
    # sa.Column('SP_RUR_TOTL_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_URB_GROW', sa.FLOAT(), nullable=True),
    # sa.Column('SP_URB_TOTL', sa.FLOAT(), nullable=True),
    # sa.Column('SP_URB_TOTL_IN_ZS', sa.FLOAT(), nullable=True),
    # sa.Column('SP_UWT_TFRT', sa.FLOAT(), nullable=True),
    # sa.Column('country_code', sa.VARCHAR(length=3), nullable=True),
    # sa.Column('country_name', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('region', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('year', sa.DATETIME(), nullable=True)]
    # )
    # op.create_table('paris_iris_mapping',
    # sa.Column('type', sa.TEXT(), nullable=True),
    # sa.Column('features', sa.TEXT(), nullable=True)
    # )
    # op.create_table('unicode_test',
    # sa.Column('phrase', sa.VARCHAR(length=500), nullable=True),
    # sa.Column('short_phrase', sa.VARCHAR(length=10), nullable=True),
    # sa.Column('with_missing', sa.VARCHAR(length=100), nullable=True),
    # sa.Column('dttm', sa.DATE(), nullable=True),
    # sa.Column('value', sa.FLOAT(), nullable=True)
    # )
    # op.create_table('bart_lines',
    # sa.Column('color', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('name', sa.VARCHAR(length=255), nullable=True),
    # sa.Column('path_json', sa.TEXT(), nullable=True),
    # sa.Column('polyline', sa.TEXT(), nullable=True)
    # )
    # op.drop_table('tagged_object')
    # op.drop_table('tag')
    op.drop_table('reset_request')
    # ### end Alembic commands ###
